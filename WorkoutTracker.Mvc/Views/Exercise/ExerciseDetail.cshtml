@using WorkoutTrackerMvc.Models.ExerciseViewModels
@model CreateExerciseViewModel
@{
    ViewData["Title"] = "Exercise Detail";
}
@section Scripts{
    <script src="https://unpkg.com/feather-icons"></script>
    <script>
        feather.replace()
    </script>
}

<br />
<div class="exercise-container">
<form asp-area="" asp-controller="Exercise" asp-action="ExerciseDetail" method="Post">
    <div asp-validation-summary="All"></div>
    <div class="row">
        <div class="col-lg-4">Exercise Name</div>
        <div class="col-lg-8">
            <input asp-for="exerciseName" placeholder="Exercise Name" autocomplete="on" class="form-control" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-4">Exercise Type</div>
        <div class="col-lg-8">
            <select asp-for="ExerciseType" asp-items="Html.GetEnumSelectList<WorkoutTracker.Core.Enums.TypeOfExercise>()" class="form-control"></select>
        </div>
    </div>
    <br />
    <input asp-for="workoutSessionId"  type="hidden"/>
    <input asp-for="exerciseId" type="hidden" />
    <hr />
        Add new Set:
    <div class="row">
        <br />
        <div class="col-lg-4">Number of reps:</div>
        <div class="col-lg-8"> 
            <input asp-for="setToAdd.Repetitions" class="form-control"/>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-4">Difficulty:</div>
        <div class="col-lg-8"> 
            <input asp-for="setToAdd.Difficulty" class="form-control"/>
        </div>
    </div>
        <br />
        <div class="exercise-container-button-section">
            <button type="submit" class="button-save"><i data-feather="save"></i> Save changes</button>
        </div>
        <br />
<hr />
    Sets:
    <br />
        @if(Model.sets is not null)
    {
        @for(var i = 0; i < Model.sets.Count; i++)
        {
            <div class="set-box">
                <div class="row">
                   <div class="col-lg-4">Number of reps</div>
                    <div class="col-lg-8">
                    <input asp-for="@Model.sets[i].Repetitions"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">Difficulty of rep</div>
                    <div class="col-lg-8">
                    <input asp-for="@Model.sets[i].Difficulty"/>
                    </div>
                </div>
            </div>
        }
    }
</form>
</div>
<br />
<div class="exercise-container">

    <form asp-area="" asp-controller="Exercise" asp-action="SaveExercise" method="Post">
        <input asp-for="exerciseName" type="hidden" />
        <input asp-for="ExerciseType" type="hidden" />
        <input asp-for="workoutSessionId" type="hidden" />
        <input asp-for="setToAdd" type="hidden" />
        <input asp-for="exerciseId" type="hidden" />
        @if (Model.sets is not null)
        {
            @for (var i = 0; i < Model.sets.Count; i++)
            {
                <input asp-for="@Model.sets[i].Repetitions" type="hidden">
                <input asp-for="@Model.sets[i].Difficulty" type="hidden">
            }
        }
        <div>
        <button type="submit" class="btn btn-primary">Save exercise</button>
        </div>
    </form>
</div>



